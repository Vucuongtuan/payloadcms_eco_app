/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OrderStatus".
 */
export type OrderStatus = ('processing' | 'completed' | 'cancelled' | 'refunded') | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    tags: Tag;
    reviews: Review;
    newsletter: Newsletter;
    'email-subscribe': EmailSubscribe;
    pages: Page;
    posts: Post;
    variantsProduct: VariantsProduct;
    search: Search;
    addresses: Address;
    variants: Variant;
    variantTypes: VariantType;
    variantOptions: VariantOption;
    products: Product;
    carts: Cart;
    orders: Order;
    transactions: Transaction;
    'payload-jobs': PayloadJob;
    'payload-folders': FolderInterface;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    users: {
      orders: 'orders';
      cart: 'carts';
      addresses: 'addresses';
    };
    variantTypes: {
      options: 'variantOptions';
    };
    'payload-folders': {
      documentsAndFolders: 'payload-folders' | 'media' | 'categories';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    newsletter: NewsletterSelect<false> | NewsletterSelect<true>;
    'email-subscribe': EmailSubscribeSelect<false> | EmailSubscribeSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    variantsProduct: VariantsProductSelect<false> | VariantsProductSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    addresses: AddressesSelect<false> | AddressesSelect<true>;
    variants: VariantsSelect<false> | VariantsSelect<true>;
    variantTypes: VariantTypesSelect<false> | VariantTypesSelect<true>;
    variantOptions: VariantOptionsSelect<false> | VariantOptionsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    carts: CartsSelect<false> | CartsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    transactions: TransactionsSelect<false> | TransactionsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-folders': PayloadFoldersSelect<false> | PayloadFoldersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'vi' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
  /**
   * Generated by the Payload Ecommerce plugin
   */
  ecommerce: {
    collections: {
      addresses: Address;
      carts: Cart;
      customers?: User;
      orders: Order;
      products: Product;
      transactions: Transaction;
      variantOptions: VariantOption;
      variants: Variant;
      variantTypes: VariantType;
    };
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  roles?: ('admin' | 'customer')[] | null;
  orders?: {
    docs?: (number | Order)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  cart?: {
    docs?: (number | Cart)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  addresses?: {
    docs?: (number | Address)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  items?:
    | {
        product?: (number | null) | Product;
        variant?: (number | null) | Variant;
        quantity: number;
        id?: string | null;
      }[]
    | null;
  shippingAddress?: {
    title?: string | null;
    firstName?: string | null;
    lastName?: string | null;
    company?: string | null;
    addressLine1?: string | null;
    addressLine2?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
    phone?: string | null;
  };
  customer?: (number | null) | User;
  customerEmail?: string | null;
  transactions?: (number | Transaction)[] | null;
  status?: OrderStatus;
  amount?: number | null;
  currency?: 'USD' | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  description?: string | null;
  color: string;
  /**
   * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
   */
  pricing: {
    price: string;
    discount: number;
  };
  sizes?: {
    s?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    M?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    L?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    xl?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    xxl?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
  };
  gallery?: (number | Media)[] | null;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  sections?: (ContentBlock | MediaBlock)[] | null;
  variantsOption?: (number | VariantsProduct)[] | null;
  relatedProducts?: (number | Product)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  slug: string;
  slugLock?: boolean | null;
  sales?: number | null;
  statusProduct: 'in-stock' | 'out-of-stock' | 'pre-order';
  taxonomies: {
    category: number | Category;
    subCategory?: (number | null) | Category;
    tags?: (number | Tag)[] | null;
  };
  thumbnail: (number | Media)[];
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: string | null;
  blurData?: string | null;
  folder?: (number | null) | FolderInterface;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-folders".
 */
export interface FolderInterface {
  id: number;
  name: string;
  folder?: (number | null) | FolderInterface;
  documentsAndFolders?: {
    docs?: (
      | {
          relationTo?: 'payload-folders';
          value: number | FolderInterface;
        }
      | {
          relationTo?: 'media';
          value: number | Media;
        }
      | {
          relationTo?: 'categories';
          value: number | Category;
        }
    )[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  folderType?: ('media' | 'categories')[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  folder?: (number | null) | FolderInterface;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  layout?: ('container' | 'full' | 'wide' | 'narrow') | null;
  spacing?: ('none' | 'small' | 'medium' | 'large') | null;
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  template?: ('image-only' | 'image-center' | 'image-bottom-left' | 'column') | null;
  columns?: ('text-first' | 'image-first') | null;
  background?: string | null;
  cta?: {
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'categories';
            value: number | Category;
          } | null)
        | ({
            relationTo: 'products';
            value: number | Product;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline') | null;
    };
  };
  layout?: ('container' | 'full' | 'wide' | 'narrow') | null;
  spacing?: ('none' | 'small' | 'medium' | 'large') | null;
  aspect?:
    | ('auto' | 'ultrawide' | 'photo' | 'poster' | 'story' | 'insta' | 'retro' | 'video' | 'square' | 'wide')
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  publishedOn?: string | null;
  sections?:
    | (
        | ContentBlock
        | MediaBlock
        | Carousel
        | {
            items?:
              | {
                  media?: (number | null) | Media;
                  link: {
                    type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?:
                      | ({
                          relationTo: 'pages';
                          value: number | Page;
                        } | null)
                      | ({
                          relationTo: 'categories';
                          value: number | Category;
                        } | null)
                      | ({
                          relationTo: 'products';
                          value: number | Product;
                        } | null);
                    url?: string | null;
                    label: string;
                    /**
                     * Choose how the link should be rendered.
                     */
                    appearance?: ('default' | 'outline') | null;
                  };
                  id?: string | null;
                }[]
              | null;
            layout?: ('container' | 'full' | 'wide' | 'narrow') | null;
            spacing?: ('none' | 'small' | 'medium' | 'large') | null;
            aspect?:
              | ('auto' | 'ultrawide' | 'photo' | 'poster' | 'story' | 'insta' | 'retro' | 'video' | 'square' | 'wide')
              | null;
            columns?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'columnMedia';
          }
      )[]
    | null;
  slug: string;
  slugLock?: boolean | null;
  isTopLevel?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Carousel".
 */
export interface Carousel {
  duration: number;
  gallery?:
    | {
        media: number | Media;
        content?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: number | Category;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  layout?: ('container' | 'full' | 'wide' | 'narrow') | null;
  spacing?: ('none' | 'small' | 'medium' | 'large') | null;
  aspect?:
    | ('auto' | 'ultrawide' | 'photo' | 'poster' | 'story' | 'insta' | 'retro' | 'video' | 'square' | 'wide')
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variantsProduct".
 */
export interface VariantsProduct {
  id: number;
  title: string;
  titleVN: string;
  /**
   * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
   */
  pricing: {
    price: string;
    discount: number;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  color: string;
  sizes?: {
    s?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    M?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    L?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    xl?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
    xxl?: {
      customPrice?: boolean | null;
      /**
       * Enter the price in VND only, other currencies will be automatically converted based on the exchange rates defined in GlobalSetting.
       */
      pricing?: {
        price: string;
        discount: number;
      };
      inventory?: {
        /**
         * Auto generate SKU
         */
        sku?: string | null;
        stock?: number | null;
      };
    };
  };
  gallery?: (number | Media)[] | null;
  thumbnail?: (number | Media)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  title: string;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variants".
 */
export interface Variant {
  id: number;
  /**
   * Used for administrative purposes, not shown to customers. This is populated by default.
   */
  title?: string | null;
  product: number | Product;
  options: (number | VariantOption)[];
  inventory?: number | null;
  priceInUSDEnabled?: boolean | null;
  priceInUSD?: number | null;
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variantOptions".
 */
export interface VariantOption {
  id: number;
  _variantOptions_options_order?: string | null;
  variantType: number | VariantType;
  label: string;
  /**
   * should be defaulted or dynamic based on label
   */
  value: string;
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variantTypes".
 */
export interface VariantType {
  id: number;
  label: string;
  name: string;
  options?: {
    docs?: (number | VariantOption)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions".
 */
export interface Transaction {
  id: number;
  items?:
    | {
        product?: (number | null) | Product;
        variant?: (number | null) | Variant;
        quantity: number;
        id?: string | null;
      }[]
    | null;
  billingAddress?: {
    title?: string | null;
    firstName?: string | null;
    lastName?: string | null;
    company?: string | null;
    addressLine1?: string | null;
    addressLine2?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
    phone?: string | null;
  };
  status: 'pending' | 'succeeded' | 'failed' | 'cancelled' | 'expired' | 'refunded';
  customer?: (number | null) | User;
  customerEmail?: string | null;
  order?: (number | null) | Order;
  cart?: (number | null) | Cart;
  amount?: number | null;
  currency?: 'USD' | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts".
 */
export interface Cart {
  id: number;
  items?:
    | {
        product?: (number | null) | Product;
        variant?: (number | null) | Variant;
        quantity: number;
        id?: string | null;
      }[]
    | null;
  customer?: (number | null) | User;
  purchasedAt?: string | null;
  status?: ('active' | 'purchased' | 'abandoned') | null;
  subtotal?: number | null;
  currency?: 'USD' | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: number;
  customer?: (number | null) | User;
  title?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  company?: string | null;
  addressLine1?: string | null;
  addressLine2?: string | null;
  city?: string | null;
  state?: string | null;
  postalCode?: string | null;
  country:
    | 'US'
    | 'GB'
    | 'CA'
    | 'AU'
    | 'AT'
    | 'BE'
    | 'BR'
    | 'BG'
    | 'CY'
    | 'CZ'
    | 'DK'
    | 'EE'
    | 'FI'
    | 'FR'
    | 'DE'
    | 'GR'
    | 'HK'
    | 'HU'
    | 'IN'
    | 'IE'
    | 'IT'
    | 'JP'
    | 'LV'
    | 'LT'
    | 'LU'
    | 'MY'
    | 'MT'
    | 'MX'
    | 'NL'
    | 'NZ'
    | 'NO'
    | 'PL'
    | 'PT'
    | 'RO'
    | 'SG'
    | 'SK'
    | 'SI'
    | 'ES'
    | 'SE'
    | 'CH';
  phone?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  user: number | User;
  product: number | Product;
  rating: number;
  comment?: string | null;
  approved?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter".
 */
export interface Newsletter {
  id: number;
  listEmail?: (number | EmailSubscribe)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-subscribe".
 */
export interface EmailSubscribe {
  id: number;
  email: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image: number | Media;
  linkedProducts?:
    | {
        relationTo: 'products';
        value: number | Product;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'categories';
        value: number | Category;
      }
    | {
        relationTo: 'products';
        value: number | Product;
      }
    | {
        relationTo: 'variants';
        value: number | Variant;
      }
    | {
        relationTo: 'posts';
        value: number | Post;
      }
    | {
        relationTo: 'pages';
        value: number | Page;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'newsletter';
        value: number | Newsletter;
      } | null)
    | ({
        relationTo: 'email-subscribe';
        value: number | EmailSubscribe;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'variantsProduct';
        value: number | VariantsProduct;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'addresses';
        value: number | Address;
      } | null)
    | ({
        relationTo: 'variants';
        value: number | Variant;
      } | null)
    | ({
        relationTo: 'variantTypes';
        value: number | VariantType;
      } | null)
    | ({
        relationTo: 'variantOptions';
        value: number | VariantOption;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'carts';
        value: number | Cart;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'transactions';
        value: number | Transaction;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null)
    | ({
        relationTo: 'payload-folders';
        value: number | FolderInterface;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  orders?: T;
  cart?: T;
  addresses?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  blurData?: T;
  folder?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  folder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  user?: T;
  product?: T;
  rating?: T;
  comment?: T;
  approved?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter_select".
 */
export interface NewsletterSelect<T extends boolean = true> {
  listEmail?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-subscribe_select".
 */
export interface EmailSubscribeSelect<T extends boolean = true> {
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  publishedOn?: T;
  sections?:
    | T
    | {
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        carousel?: T | CarouselSelect<T>;
        columnMedia?:
          | T
          | {
              items?:
                | T
                | {
                    media?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              layout?: T;
              spacing?: T;
              aspect?: T;
              columns?: T;
              id?: T;
              blockName?: T;
            };
      };
  slug?: T;
  slugLock?: T;
  isTopLevel?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  layout?: T;
  spacing?: T;
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  template?: T;
  columns?: T;
  background?: T;
  cta?:
    | T
    | {
        content?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
      };
  layout?: T;
  spacing?: T;
  aspect?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Carousel_select".
 */
export interface CarouselSelect<T extends boolean = true> {
  duration?: T;
  gallery?:
    | T
    | {
        media?: T;
        content?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              appearance?: T;
            };
        id?: T;
      };
  layout?: T;
  spacing?: T;
  aspect?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  content?: T;
  image?: T;
  linkedProducts?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variantsProduct_select".
 */
export interface VariantsProductSelect<T extends boolean = true> {
  title?: T;
  titleVN?: T;
  pricing?:
    | T
    | {
        price?: T;
        discount?: T;
      };
  slug?: T;
  slugLock?: T;
  color?: T;
  sizes?:
    | T
    | {
        s?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        M?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        L?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        xl?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        xxl?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
      };
  gallery?: T;
  thumbnail?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses_select".
 */
export interface AddressesSelect<T extends boolean = true> {
  customer?: T;
  title?: T;
  firstName?: T;
  lastName?: T;
  company?: T;
  addressLine1?: T;
  addressLine2?: T;
  city?: T;
  state?: T;
  postalCode?: T;
  country?: T;
  phone?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variants_select".
 */
export interface VariantsSelect<T extends boolean = true> {
  title?: T;
  product?: T;
  options?: T;
  inventory?: T;
  priceInUSDEnabled?: T;
  priceInUSD?: T;
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variantTypes_select".
 */
export interface VariantTypesSelect<T extends boolean = true> {
  label?: T;
  name?: T;
  options?: T;
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variantOptions_select".
 */
export interface VariantOptionsSelect<T extends boolean = true> {
  _variantOptions_options_order?: T;
  variantType?: T;
  label?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  color?: T;
  pricing?:
    | T
    | {
        price?: T;
        discount?: T;
      };
  sizes?:
    | T
    | {
        s?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        M?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        L?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        xl?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
        xxl?:
          | T
          | {
              customPrice?: T;
              pricing?:
                | T
                | {
                    price?: T;
                    discount?: T;
                  };
              inventory?:
                | T
                | {
                    sku?: T;
                    stock?: T;
                  };
            };
      };
  gallery?: T;
  content?: T;
  sections?:
    | T
    | {
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
      };
  variantsOption?: T;
  relatedProducts?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  slug?: T;
  slugLock?: T;
  sales?: T;
  statusProduct?: T;
  taxonomies?:
    | T
    | {
        category?: T;
        subCategory?: T;
        tags?: T;
      };
  thumbnail?: T;
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts_select".
 */
export interface CartsSelect<T extends boolean = true> {
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        id?: T;
      };
  customer?: T;
  purchasedAt?: T;
  status?: T;
  subtotal?: T;
  currency?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        id?: T;
      };
  shippingAddress?:
    | T
    | {
        title?: T;
        firstName?: T;
        lastName?: T;
        company?: T;
        addressLine1?: T;
        addressLine2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        phone?: T;
      };
  customer?: T;
  customerEmail?: T;
  transactions?: T;
  status?: T;
  amount?: T;
  currency?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions_select".
 */
export interface TransactionsSelect<T extends boolean = true> {
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        id?: T;
      };
  billingAddress?:
    | T
    | {
        title?: T;
        firstName?: T;
        lastName?: T;
        company?: T;
        addressLine1?: T;
        addressLine2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        phone?: T;
      };
  status?: T;
  customer?: T;
  customerEmail?: T;
  order?: T;
  cart?: T;
  amount?: T;
  currency?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-folders_select".
 */
export interface PayloadFoldersSelect<T extends boolean = true> {
  name?: T;
  folder?: T;
  documentsAndFolders?: T;
  folderType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: (number | null) | Media;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: number | Category;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
        };
        child?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'categories';
                      value: number | Category;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: number | Product;
                    } | null);
                url?: string | null;
                label: string;
              };
              subChild?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: number | Page;
                          } | null)
                        | ({
                            relationTo: 'categories';
                            value: number | Category;
                          } | null)
                        | ({
                            relationTo: 'products';
                            value: number | Product;
                          } | null);
                      url?: string | null;
                      label: string;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: number | Category;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        child?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              subChild?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}